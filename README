DIPENDENZE
----------

 + pil <http://www.pythonware.com/library/pil/>
   # aptitude install libfreetype6-dev se si presenta il problema
   "The _imagingft C module is not installed"
   oppure editare setup.py e scrivere il path giusto per freetype

       

INSTALLAZIONE
-------------

Installarlo su un sistema gentoo utilizzando un backend SQLite

 # emerge proj geos gdal python-dev

siccome serve spatialite si deve abilitare l'overlay "sunrise"
(tenete che bisogna abilitare subversion per layman come indicato
dalla pagina di questo overlay <http://overlays.gentoo.org/proj/sunrise/wiki>).

N.B: ricordarsi di attivare come USE flags sia geos che proj

 $ cat /etc/portage/package.use
 sci-libs/gdal geos sqlite
 dev-db/spatialite geos proj

 # layman -a -f sunrise
 # emerge spatialite

Pu√≤ esserci un problema per l'utilizzo delle estensioni con la
libreria pysqlite

	django.core.exceptions.ImproperlyConfigured: The pysqlite library does not support C extension loading. Both SQLite and pysqlite must be configured to allow the loading of extensions to use SpatiaLite.

eseguire

 (env) $ pip install --no-install pysqlite # oppure wget http://pysqlite.googlecode.com/files/pysqlite-2.6.0.tar.gz
 (env) $ vim env/build/pysqlite/setup.cfg  #        cd pysqlite && vi setup.cfg
 [commenta la riga define=SQLITE_OMIT_LOAD_EXTENSION]
 (env) $ pip install env/build/pysqlite/setup.py install # python setup.py install
 (env) $ wget http://www.gaia-gis.it/spatialite/init_spatialite-2.3.sql.gz
 (env) $ gunzip init_spatialite-2.3.sql.gz
 (env) $ spatialite geodjango.db < init_spatialite-2.3.sql

Configurare il database nella seguente maniera
 
	DATABASES = {
	    'default': {
		 'ENGINE': 'django.contrib.gis.db.backends.spatialite',
		 'NAME': 'geodjango',
		 'USER': 'geo',
	     }
	}

DATABASE
--------

 $ createuser -U postgres geouser -S -D -R
 $ psql -U postgres -c "alter role geouser with password 'geopassword';"
 $ createdb -U postgres -T template_postgis -O geouser geodatabase

 $ python manage.py  sqlreset places | psql -U <db user> <dbname> -f -
 $ python manage.py loaddata <fixture>


PRINCIPI
--------

Generalmente per l'identificazione dell'utente sulla piattaforma
si usa la session_key contenuta nel cookie, mentre per identificare
la geo-room da cui provengono le chiamate AJAX si usa l'header HTTP
chiamato HTTP_REFERER. Utilizzando l'https la sicurezza dei dati
comunicati dovrebbe essere preservata.
